#See https://github.com/burningwave/core/wiki/Architectural-overview-and-configuration#dynamic-component-container
#For more details about configuration
hunters.path-loading-lock=forName
paths.custom-class-path=${paths.java-memory-compiler.class-repositories}/../../src/test/external-resources/libs-for-test.zip;
paths.custom-class-path2=${paths.custom-class-path}/../spring-core-4.3.4.RELEASE.jar;
paths.custom-class-path3=${system.properties:java.class.path};
#class-hunter.default-path-scanner-class-loader=(Supplier<PathScannerClassLoader>)() -> ((ComponentSupplier)parameter[0]).getPathScannerClassLoader()
#class-factory.default-class-loader=(Supplier<ClassLoader>)() -> ((ComponentSupplier)parameter[0]).getPathScannerClassLoader()
#class-factory.default-class-loader.parent=Thread.currentThread().getContextClassLoader()
#class-factory.default-class-loader=PathScannerClassLoader.create(\
#	${class-factory.default-class-loader.parent},\
#	((ComponentSupplier)parameter[0]).getPathHelper()\
#)
code-block-1=\
	${code-block-2}\
	return (T)Date.from(zonedDateTime.toInstant());
code-block-1.imports=\
	${code-block-2.imports}\
	java.util.Date;
code-block-2=\
	LocalDateTime localDateTime = (LocalDateTime)parameter[0];\
	ZonedDateTime zonedDateTime = localDateTime.atZone(ZoneId.systemDefault());
code-block-2.imports=\
	static org.burningwave.core.assembler.StaticComponentContainer.Strings;\
	java.time.LocalDateTime;\
	java.time.ZonedDateTime;\
	java.time.ZoneId;
