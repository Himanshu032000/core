name: Build and test -> Compute coverage

on:
  watch:
    types: [started]

jobs:
  ask-for-authorization:
    name: Ask for authorization
    runs-on: ubuntu-latest
    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-test-with-Java-8-and-later:
    name: Build -> Test (JVM ${{ matrix.java }}, ${{ matrix.os }})
    needs: [ask-for-authorization]
    strategy:
      fail-fast: true
      max-parallel: 16
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [8, 9, 10, 11, 12, 13, 14, 15, 16-ea]
        architecture: [x64]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}
      - if: endsWith(matrix.java, '-ea') != true 
        name: Build and test with final version JDK
        run: mvn -B clean test -Dproject_jdk_version=${{ matrix.java }} -DskipTests=false --file pom.xml
      - if: endsWith(matrix.java, '16-ea') == true 
        name: Build and test with early access version JDK
        run: mvn -B clean test -Dproject_jdk_version=16 -DskipTests=false --file pom.xml
        
  test-and-compute-coverage:
    name: Test -> Compute coverage
    needs: [build-and-test-with-Java-8-and-later]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          architecture: x64
      - name: Build and test
        run: mvn clean test -DskipTests=false -Dproject.test.testSuite=AllTestsSuite -P run-coveralls jacoco:report coveralls:report -DrepoToken=${{ secrets.coveralls_repo_token }}