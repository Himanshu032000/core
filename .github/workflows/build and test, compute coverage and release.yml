name: Build and Test -> Compute coverage -> Release 

on:
  watch:
    types: [started]

jobs:
  ask-for-authorization:
    name: Ask for authorization
    runs-on: ubuntu-latest

    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  build-and-test-with-Java-8:
    name: Build and test with Java 8
    needs: [ask-for-authorization]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -DskipTests=false -DjavadocExecutable.relativePath=../bin/javadoc --file pom.xml

  build-and-test-with-Java-9:
    name: Build and test with Java 9
    needs: [build-and-test-with-Java-8]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 9
      uses: actions/setup-java@v1
      with:
        java-version: 9
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=9 -DskipTests=false --file pom.xml

  build-and-test-with-Java-10:
    name: Build and test with Java 10
    needs: [build-and-test-with-Java-9]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 10
      uses: actions/setup-java@v1
      with:
        java-version: 10
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=10 -DskipTests=false --file pom.xml
  
  build-and-test-with-Java-11:
    name: Build and test with Java 11
    needs: [build-and-test-with-Java-10]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=11 -DskipTests=false --file pom.xml
  
  build-and-test-with-Java-12:
    name: Build and test with Java 12
    needs: [build-and-test-with-Java-11]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 12
      uses: actions/setup-java@v1
      with:
        java-version: 12
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=12 -DskipTests=false --file pom.xml
  
  build-and-test-with-Java-13:
    name: Build and test with Java 13
    needs: [build-and-test-with-Java-12]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=13 -DskipTests=false --file pom.xml
  
  build-and-test-with-Java-14:
    name: Build and test with Java 14
    needs: [build-and-test-with-Java-13]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
        java-package: jdk  
    - name: Build and test
      run: mvn -B clean test -Dproject.jdk.version=14 -DskipTests=false --file pom.xml
 
  test-and-compute-coverage:
    name: Test and compute coverage
    needs: [build-and-test-with-Java-14]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          architecture: x64
      - name: Build and test
        run: mvn clean test -DskipTests=false -P run-coveralls jacoco:report coveralls:report -DrepoToken=${{ secrets.coveralls_repo_token }}
  
  release:
    name: Release
    needs: [build-and-test-with-Java-14]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Releasing new version')
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish to the Maven Central Repository
        run: |
          export GPG_TTY=$(tty)
          echo "${{ secrets.gpg_private_key }}" | gpg --batch --import
          git config user.name "${{ github.event.head_commit.committer.name }}"
          git config user.email "${{ github.event.head_commit.committer.email }}"
          mvn -B release:prepare release:perform -Dproject.jdk.version=8 -DskipTests=true -Dgpg.passphrase=${{ secrets.gpg_passphrase }} -Dgpg.keyname=${{ secrets.gpg_key_id }} -Drepository.url=https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
        env:
          MAVEN_USERNAME: ${{ secrets.nexus_username }}
          MAVEN_PASSWORD: ${{ secrets.nexus_password }}
