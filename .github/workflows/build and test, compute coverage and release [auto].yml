name: Build and Test -> Compute coverage -> Release 

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
    
  build-and-test-with-Java-8:
    name: Build and test with Java 8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
          java-package: jdk  
      - name: Build and test
        run: mvn -B clean test -DskipTests=false -DjavadocExecutable.relativePath=../bin/javadoc --file pom.xml

#  build-and-test-with-Java-9-and-later:
#    name: Build and test with Java 9 and later
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-latest]
#        java: [9, 10, 11, 12, 13, 14]
#        architecture: [x32, x64]
#    needs: [build-and-test-with-Java-8]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK ${{ matrix.java }}
#      - uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#          architecture: ${{ matrix.architecture }}  
#      - name: Build and test
#        run: mvn -B clean test -Dproject.jdk.version=${{ matrix.java }} -DskipTests=false --file pom.xml
 
  test-and-compute-coverage:
    name: Test and compute coverage
    needs: [build-and-test-with-Java-8]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          architecture: x64
      - name: Build and test
        run: mvn clean test -DskipTests=false -P run-coveralls jacoco:report coveralls:report -DrepoToken=${{ secrets.coveralls_repo_token }}
  
  release:
    name: Release
    needs: [build-and-test-with-Java-9-and-later]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Releasing new version')
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 14
      - uses: actions/setup-java@v1
        with:
          java-version: 14
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish to the Maven Central Repository
        run: |
          export GPG_TTY=$(tty)
          echo "${{ secrets.gpg_private_key }}" | gpg --batch --import
          git config user.name "${{ github.event.head_commit.committer.name }}"
          git config user.email "${{ github.event.head_commit.committer.email }}"
          mvn -B release:prepare release:perform -Dproject.jdk.version=8 -DskipTests=true -Dgpg.passphrase=${{ secrets.gpg_passphrase }} -Dgpg.keyname=${{ secrets.gpg_key_id }} -Drepository.url=https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
        env:
          MAVEN_USERNAME: ${{ secrets.nexus_username }}
          MAVEN_PASSWORD: ${{ secrets.nexus_password }}

